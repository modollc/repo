<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.djk.web.dao.food.FoodCategoryWriteDao">
	<resultMap id="FoodCategoryResult" type="com.djk.web.entity.food.FoodCategory">
			<result property="id" column="id" />
			<result property="oldId" column="id" />
			<result property="createBy" column="create_by" />
			<result property="createDate" column="create_date" />
			<result property="updateBy" column="update_by" />
			<result property="updateDate" column="update_date" />
			<result property="name" column="name" />
			<result property="code" column="code" />
			<result property="state" column="state" />
			<result property="pid" column="pid" />
	</resultMap>
	
	<resultMap id="nameResult" type="String">
			<result property="name" column="name" />
	</resultMap>
	
	<resultMap id="FoodPublicCategoryResult" type="com.djk.web.entity.food.FoodPublicCategory">
			<result property="id" column="id" />
			<result property="oldId" column="id" />
			<result property="createBy" column="create_by" />
			<result property="createDate" column="create_date" />
			<result property="updateBy" column="update_by" />
			<result property="updateDate" column="update_date" />
			<result property="name" column="name" />
			<result property="pid" column="pid" />
			<result property="foodCategoryId" column="food_category_id" />
			<result property="foodId" column="food_id" />
	</resultMap>
	
	<select id="getPublicCategoryById" parameterType="Integer" resultMap="FoodPublicCategoryResult">
		select
		   *
		from `food_public_category`
		where `id` = #{id} and `state` = 1
	</select>
	
	<select id="getPublicCategoryList" parameterType="Integer" resultMap="FoodPublicCategoryResult">
		select
		   *
		from `food_public_category`
		where `food_category_id` = #{foodCategoryId} and `pid` = #{pId} and `state` = 1
	</select>
	
	<select id="getPublicCategoryCheckList" parameterType="Integer" resultMap="FoodPublicCategoryResult">
		select
		   *
		from `food_public_category_check`
		where `food_id` = #{foodId} and `pid` = #{pId} and `state` = 1
	</select>
	
	<select id="getPublicCategoryListByfoodCategoryId" parameterType="Integer" resultMap="FoodPublicCategoryResult">
		select
		   *
		from `food_public_category`
		where `food_category_id` = #{foodCategoryId} and `state` = 1
	</select>
	
	<select id="get" parameterType="Integer" resultMap="FoodCategoryResult">
		select
		   *
		from `food_category`
		where `id` = #{id}
	</select>
	
	<select id="getParentIdStr" parameterType="Integer" resultType="String">
		SELECT DISTINCT getParentList(#{id}) from food_category 
	</select>
	
	<select id="queryCodeMaxByPId" parameterType="Integer" resultType="Integer">
		select max(code) from food_category where pid=#{pId};
	</select>
	
	<select id="queryParentCodeValueById" parameterType="Integer" resultType="String">
		select code_value from food_category where id=#{id};
	</select>
	
	<select id="getFoodCategoryListByPId" parameterType="Integer" resultMap="FoodCategoryResult">
		select
		   *
		from `food_category`
		where `pid` = #{pid} and `state` = 1
	</select>
	
	<select id="getFoodCategoryListByName" parameterType="java.lang.String" resultMap="nameResult">
		select name
		from `food_category`
		where name like CONCAT(CONCAT('%',#{name}),'%') and `state` = 1
	</select>
	
	<select id="getFoodCategoryList" parameterType="Integer" resultMap="FoodCategoryResult">
		select
		   *
		from `food_category`
		where (`pid` = #{id} || `id` = #{id}) and `state` = 1
	</select>
	
	<select id="isPublicSubNodeById" parameterType="Integer" resultType="Integer">
		select
		   count(*)
		from `food_public_category`
		where `pid` = #{pid} and `state` = 1
	</select>
	
	<select id="isPublicSubNodeCheckById" parameterType="Integer" resultType="Integer">
		select
		   count(*)
		from `food_public_category_check`
		where `pid` = #{pid} and `state` = 1
	</select>
	
	<select id="queryFoodGategoryRel" parameterType="Integer" resultType="Integer">
		select
		   count(*)
		from `food`
		where   `state` = 1 and (`first_category_id` = #{id} or `second_category_id` = #{id} or `three_category_id` = #{id})
	</select>
	
	<select id="queryFoodPublicCategoryRel" parameterType="Integer" resultType="Integer">
		select
		   count(*)
		from `food_public_category_check`
		where   `state` = 1 and `old_id` = #{id}
	</select>
	
	<select id="isSubNodeById" parameterType="Integer" resultType="Integer">
		select
		   count(*)
		from `food_category`
		where `pid` = #{pid} and`state` = 1
	</select>
	
	<select id="isSubNodePublicById" parameterType="Integer" resultType="Integer">
		select
		   count(*)
		from `food_public_category`
		where `pid` = #{pid} and`state` = 1
	</select>
	
	<delete id="delete" >
        delete from `food_category` where `id` = #{id}
	</delete>
	
	<update id="update" parameterType="com.djk.web.entity.food.FoodCategory">
        update `food_category` 
    	<set>
			<if test="id != null">`id`= #{id},</if>
			<if test="createBy != null">`create_by`= #{createBy},</if>
			<if test="createDate != null">`create_date`= #{createDate},</if>
			<if test="updateBy != null">`update_by`= #{updateBy},</if>
			`update_date`= now(),
			<if test="name != null">`name`= #{name},</if>
			<if test="code != null">`code`= #{code},</if>
			<if test="state != null">`state`= #{state},</if>
			<if test="pid != null">`pid`= #{pid}</if>
	    </set>
        where `id` = #{id}
	</update>
	
	<update id="updatePublicFoodCategory" parameterType="com.djk.web.entity.food.FoodPublicCategory">
        update `food_public_category` 
    	<set>
			<if test="createBy != null">`create_by`= #{createBy},</if>
			<if test="createDate != null">`create_date`= #{createDate},</if>
			<if test="updateBy != null">`update_by`= #{updateBy},</if>
			`update_date`= now(),
			<if test="name != null">`name`= #{name},</if>
			<if test="state != null">`state`= #{state},</if>
			<if test="pid != null">`pid`= #{pid}</if>
	    </set>
        where `id` = #{id}
	</update>
	
	<insert id="insert" parameterType="com.djk.web.entity.food.FoodCategory" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into 
		`food_category`
		(
			
			`create_by`,
			`create_date`,
			`update_by`,
			`update_date`,
			`name`,
			`code`,
			`state`,
			`pid`,
			`code_value`
		)
		values
		(
			
			#{createBy},
			now(),
			#{updateBy},
			#{updateDate},
			#{name},
			#{code},
			#{state},
			#{pid},
			#{codeValue}
		)
	</insert>
	
	<insert id="insertPublicFoodCategory" parameterType="com.djk.web.entity.food.FoodPublicCategory" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into 
		`food_public_category`
		(
			
			`create_by`,
			`create_date`,
			`update_by`,
			`update_date`,
			`name`,
			`state`,
			`pid`,
			`food_category_id`
		)
		values
		(
			
			#{createBy},
			now(),
			#{updateBy},
			#{updateDate},
			#{name},
			#{state},
			#{pid},
			#{foodCategoryId}
		)
	</insert>
	
	
	<select id="validataCategoryName" parameterType="String" resultType="Integer">
		select
		   count(*)
		from `food_category`
		where `name` = #{name} and`state` = 1
	</select>
</mapper>