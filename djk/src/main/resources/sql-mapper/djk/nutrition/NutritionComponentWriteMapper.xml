<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.djk.web.dao.nutrition.NutritionComponentWriteDao">
	<resultMap id="NutritionComponentResult" type="com.djk.web.entity.nutrition.NutritionComponent">
			<result property="id" column="id" />
			<result property="name" column="name" />
			<result property="unit" column="unit" />
			<result property="nutritionCategoryId" column="nutrition_category_id" />
			<result property="nutritionCategoryName" column="nutrition_category_name" />
			<result property="nutritionCategoryCode" column="nutrition_category_code" />
			<result property="createBy" column="create_by" />
			<result property="createDate" column="create_date" />
			<result property="updateBy" column="update_by" />
			<result property="updateDate" column="update_date" />
			<result property="state" column="state" />
			<result property="pids" column="pids" />
	</resultMap>
	
	<select  id="checkDelete" resultType="Integer">
	 select count(*) from food_nutrition_component 
     where nutrition_component_name=#{name} 
     and state=1
	</select>
	
	<select id="get" parameterType="Integer" resultMap="NutritionComponentResult">
		select
		   *
		from `nutrition_component` where id=#{id}
	</select>
		<select id="checkNameUnique" parameterType="String" resultMap="NutritionComponentResult">
		select
		   *
		from `nutrition_component`
		where `name` = #{name} and state=1
	</select>
	<select id="count" resultType="Integer">
		select count(*) from `nutrition_component`
		 <include refid="whereConditions" /> 
	</select>

	<select id="findList" parameterType="com.djk.web.entity.nutrition.NutritionComponent" resultMap="NutritionComponentResult">
		SELECT * from nutrition_component
		<include refid="whereConditions" />
	</select>
   <sql id="whereConditions">
        <where>
            state=1
            <if test="name != null and name != ''">
                and 
                ( `name` like CONCAT('%',#{name},'%') or `id` like CONCAT('%',#{name},'%') or `unit` like CONCAT('%',#{name},'%') or `nutrition_category_name` like CONCAT('%',#{name},'%')) 
            </if>
            <if test="nutritionCategoryId != null and nutritionCategoryId != ''">
                and (`pids` like CONCAT('%',#{nutritionCategoryId},'%')  or `nutrition_category_id`=#{nutritionCategoryId})
            </if>
        </where>
    </sql>
	<!-- <delete id="delete" parameterType="String">
        delete from `nutrition_component`
		where `id` = #{id}
    </delete> -->
    <update id="delete" parameterType="String">
       update `nutrition_component` set  state=2 where `id` = #{id}
    </update>
	
	
		
	
	<update id="update" parameterType="com.djk.web.entity.nutrition.NutritionComponent">
        update `nutrition_component` 
    	<set>
			<if test="id != null">`id`= #{id},</if>
			<if test="createBy != null">`create_by`= #{createBy},</if>
			<if test="createDate != null">`create_date`= #{createDate},</if>
			<if test="updateBy != null">`update_by`= #{updateBy},</if>
			<if test="updateDate != null">`update_date`= #{updateDate},</if>
			<if test="remarks != null">`remarks`= #{remarks},</if>
			<if test="name != null">`name`= #{name},</if>
			<if test="unit != null">`unit`= #{unit},</if>
			<if test="nutritionCategoryId != null">`nutrition_category_id`= #{nutritionCategoryId},</if>
			<if test="nutritionCategoryName != null">`nutrition_category_name`= #{nutritionCategoryName},</if>
			<if test="nutritionCategoryCode != null">`nutrition_category_code`= #{nutritionCategoryCode}</if>
	    </set>
        where `id` = #{id}
	</update>
	<insert id="insert" parameterType="com.djk.web.entity.nutrition.NutritionComponent" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into 
		`nutrition_component`
		(
			
			`create_by`,
			`create_date`,
			`update_by`,
			`update_date`,
			`remarks`,
			`state`,
			`name`,
			`unit`,
			`pids`,
			`nutrition_category_code`,
			`nutrition_category_name`,
			`nutrition_category_id`
		)
		values
		(
			
			#{createBy},
			#{createDate},
			#{updateBy},
			#{updateDate},
			#{remarks},
			1,
			#{name},
			#{unit},
			#{pids},
			#{nutritionCategoryCode},
			#{nutritionCategoryName},
			#{nutritionCategoryId}
		)
	</insert>
	
</mapper>